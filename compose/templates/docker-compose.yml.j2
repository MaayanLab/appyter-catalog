version: '3'
services:
  proxy:
    image: traefik:v2.2
    restart: unless-stopped
    command: >
      --api.insecure=true
      --providers.docker
      --providers.docker.exposedByDefault=false
      --entrypoints.web.address=:80
      --entrypoints.web.http.redirections.entrypoint.to=websecure
      --entrypoints.web.http.redirections.entrypoint.scheme=https
      --entrypoints.websecure.address=:443
      --certificatesresolvers.letsencrypt-prod.acme.email=${letsencrypt_email}
      --certificatesresolvers.letsencrypt-prod.acme.storage=/data/acme.json
      --certificatesresolvers.letsencrypt-prod.acme.tlschallenge=true
    ports:
      - 80:80
      - 443:443
      - 8080:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./data/proxy:/data
  appyters-catalog:
    build: app
    image: ${DOCKER_REGISTRY:-maayanlab}/appyters-catalog:{{ version }}
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app.rule=Host(`${nginx_server_name}`)"
      - "traefik.http.services.app.loadbalancer.server.port=80"
  appyters-orchestrator:
    build:
      context: ./appyter
      args:
        - appyter_version=${appyter_version}
    image: ${DOCKER_REGISTRY:-maayanlab}/appyters-orchestrator:{{ version }}
    environment:
      APPYTER_HOST: "0.0.0.0"
      APPYTER_JOBS: "2"
      APPYTER_DISPATCH: "docker"
      APPYTER_DEBUG: "false"
    command:
      - appyter
      - orchestration
      - dispatcher
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  postgrest:
    build: ./postgrest
    image: ${DOCKER_REGISTRY:-maayanlab}/appyters-postgrest:{{ version }}
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.postgrest.rule=Host(`${nginx_server_name}`) && PathPrefix(`/postgrest`)"
      - "traefik.http.services.postgrest.loadbalancer.server.port=3000"
      - "traefik.http.routers.postgrest.middlewares=postgrest-stripprefix"
      - "traefik.http.middlewares.postgrest-stripprefix.stripprefix.prefixes=/postgrest"
    environment:
      PGRST_DB_URI: "postgres://appyters:${POSTGRES_PASSWORD}@postgres:5432/appyters"
      PGRST_DB_SCHEMA: api
      PGRST_DB_ANON_ROLE: guest
      PGRST_SERVER_PROXY_URI: "${nginx_server_scheme}://${nginx_server_name}/postgrest"
  postgres:
    build: ./postgres
    image: ${DOCKER_REGISTRY:-maayanlab}/appyters-postgres:{{ version }}
    restart: unless-stopped
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: appyters
      POSTGRES_USER: appyters
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./data/postgres/:/var/lib/postgresql/data
  s3:
    build: ./s3
    image: ${DOCKER_REGISTRY:-maayanlab}/appyters-s3:{{ version }}
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.minio.rule=Host(`s3.${nginx_server_name}`) || (Host(`${nginx_server_name}`) && (PathPrefix(`/storage`) || PathPrefix(`/minio`)))"
      - "traefik.http.services.minio.loadbalancer.server.port=9000"
    environment:
      MINIO_BUCKET: ${MINIO_BUCKET}
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
    ports:
      - 9000:9000
    volumes:
      - ./data/minio/.minio:/root/.minio
      - ./data/minio/:/data
{%- for appyter in appyters %}
  appyter-{{ appyter['name'].lower() }}:
    build:
      context: {{ os.path.relpath(appyter['path'], root_dir) }}
      dockerfile: Dockerfile
      args:
        - appyter_version=${appyter_version}
    image: ${DOCKER_REGISTRY:-maayanlab}/appyter-{{ appyter['name'].lower() }}:{{ appyter['version'] }}
    restart: unless-stopped
    environment:
      - APPYTER_PREFIX=/{{ appyter['name'] }}/
      - APPYTER_PORT=5000
      - APPYTER_PROXY=true
      - APPYTER_DATA_DIR=s3://${MINIO_ACCESS_KEY}:${MINIO_SECRET_KEY}@minio:9000/storage/{{ appyter['name'] }}/
      - APPYTER_DISPATCHER=http://appyters-orchestrator:5000
      - APPYTER_DISPATCHER_URL=http://appyter-{{ appyter['name'].lower() }}:5000/{{ appyter['name'] }}
      - APPYTER_DISPATCHER_IMAGE=maayanlab/appyter-{{ appyter['name'].lower() }}:{{ appyter['version'] }}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.{{ appyter['name'].lower() }}.rule=PathPrefix(`/{{ appyter['name'] }}/`)"
      - "traefik.http.services.{{ appyter['name'].lower() }}.loadbalancer.server.port=5000"
      - "traefik.http.middlewares.{{ appyter['name'].lower() }}.headers.customrequestheaders.X-Forwarded-Proto=${nginx_server_scheme}"
      - "traefik.http.routers.{{ appyter['name'].lower() }}.middlewares={{ appyter['name'].lower() }}@docker"
    volumes:
      - ./data/{{ appyter['name'].lower() }}/:/app/data
{%- endfor %}
